@use 'sass:math';

/** @define grid */

.grid {
  $length-gap--column: $length-horizontal-padding * 2;
  $length-gap--row: 8rem;

  width: 100%;

  &__row {
    @include clear-fix;
    @extend %margin-auto;
    @include row-gap($length-gap--row);

    width: 100%;
  }

  &__column {
    @include column-gap($length-gap--column);

    float: left;
    width: 100%;

    &--size--1-of-2 {
      width: calc(
        (100% - 1 * #{$length-gap--column}) * (1 / 2) + 0 * #{$length-gap--column}
      );
    }

    &--size--1-of-3 {
      width: calc(
        (100% - 2 * #{$length-gap--column}) * (1 / 3) + 0 * #{$length-gap--column}
      );
    }

    &--size--2-of-3 {
      width: calc(
        (100% - 2 * #{$length-gap--column}) * (2 / 3) + 1 * #{$length-gap--column}
      );
    }

    &--size--1-of-4 {
      width: calc(
        (100% - 3 * #{$length-gap--column}) * (1 / 4) + 0 * #{$length-gap--column}
      );
    }

    &--size--2-of-4 {
      width: calc(
        (100% - 3 * #{$length-gap--column}) * (2 / 4) + 1 * #{$length-gap--column}
      );
    }

    &--size--3-of-4 {
      width: calc(
        (100% - 3 * #{$length-gap--column}) * (3 / 4) + 2 * #{$length-gap--column}
      );
    }
  }

  @media (width <= $breakpoint-m) {
    &__row {
      margin-bottom: 0;

      ::after {
        content: unset;
      }
    }

    .grid__column.grid__column.grid__column.grid__column {
      width: 100%;
      margin-left: auto;
      margin-right: auto;
      @include row-gap(math.div($length-gap--row, 2));
    }
  }
}
